"""initialize and create User, User Payment, User Adress, Reservation, Account, Service Category, Service, User Service databases

Revision ID: a91cc9fbdebb
Revises: ff73a94310e0
Create Date: 2025-03-06 18:02:20.714067

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a91cc9fbdebb'
down_revision: Union[str, None] = 'ff73a94310e0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('service_categories',
    sa.Column('service_category_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('entry_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('service_category_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('primary_email', sa.String(), nullable=False),
    sa.Column('primary_phone', sa.String(), nullable=False),
    sa.Column('gender', sa.String(), nullable=False),
    sa.Column('identifier', sa.String(), nullable=False),
    sa.Column('profile', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('extras', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('registration_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('accounts',
    sa.Column('account_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('platform_type', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('authentication', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('detail', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('creation_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('account_id')
    )
    op.create_table('services',
    sa.Column('service_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('service_category_id', sa.BigInteger(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('detail', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('creation_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['service_category_id'], ['service_categories.service_category_id'], ),
    sa.PrimaryKeyConstraint('service_id')
    )
    op.create_table('user_addresses',
    sa.Column('user_address_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('detail', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('creation_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_address_id')
    )
    op.create_table('user_payments',
    sa.Column('payment_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('payment_method', sa.String(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('creation_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('payment_id')
    )
    op.create_table('reservations',
    sa.Column('reservation_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_address_id', sa.BigInteger(), nullable=False),
    sa.Column('service_provider_id', sa.BigInteger(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('detail', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('procedure', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('feedback', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('history', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('creation_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['service_provider_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_address_id'], ['user_addresses.user_address_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('reservation_id')
    )
    op.create_table('user_services',
    sa.Column('user_Service_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('service_id', sa.BigInteger(), nullable=False),
    sa.Column('creation_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['services.service_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_Service_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_services')
    op.drop_table('reservations')
    op.drop_table('user_payments')
    op.drop_table('user_addresses')
    op.drop_table('services')
    op.drop_table('accounts')
    op.drop_table('users')
    op.drop_table('service_categories')
    # ### end Alembic commands ###
