"""initialize database schemas

Revision ID: 4dce451d9ab7
Revises: 
Create Date: 2025-03-11 18:26:11.382991

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4dce451d9ab7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('services',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('parent_service_id', sa.BigInteger(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('profile', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('creation_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_time', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['parent_service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('primary_email', sa.String(), nullable=False),
    sa.Column('primary_phone', sa.String(), nullable=False),
    sa.Column('gender', sa.String(), nullable=False),
    sa.Column('identifier', sa.String(), nullable=False),
    sa.Column('profile', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('extras', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('registration_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('accounts',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('platform_type', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('authentication', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('detail', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('creation_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_addresses',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('detail', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('creation_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('user_payments',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('ref_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('payment_method', sa.String(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('creation_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ref_id')
    )
    op.create_table('user_services',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('service_id', sa.BigInteger(), nullable=False),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('creation_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('reservations',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_address_id', sa.BigInteger(), nullable=False),
    sa.Column('service_provider_id', sa.BigInteger(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('detail', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('procedure', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('feedback', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('history', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('creation_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('update_datetime', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['service_provider_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_address_id'], ['user_addresses.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reservations')
    op.drop_table('user_services')
    op.drop_table('user_payments')
    op.drop_table('user_addresses')
    op.drop_table('accounts')
    op.drop_table('users')
    op.drop_table('services')
    # ### end Alembic commands ###
